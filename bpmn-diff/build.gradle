plugins {
    id 'java'
    id 'io.quarkus'
}

configurations {
    webapp 
}

dependencies {
	if (!project.hasProperty('hollow')) {
		webapp project(':bpmn-diff-webapp')
	}

    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jsonb'
	implementation 'io.quarkus:quarkus-rest-client'
    implementation 'io.quarkus:quarkus-picocli'
	
    testImplementation 'io.quarkus:quarkus-junit5'

//    compile "org.slf4j:slf4j-simple"
    

}

// https://discuss.gradle.org/t/right-way-to-copy-contents-from-dependency-archives/7449/12
task copyFrontend(type: Copy) {
    //dependsOn ":bpmn-diff-webapp:build"
    dependsOn configurations.webapp
    
    from configurations.webapp.collect { zipTree(it) }
    into "$buildDir/resources/main/META-INF/resources"
    include "**/*"
}

processResources.dependsOn copyFrontend

group 'de.dplatz.bpmn-diff'

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


task runApp(type: JavaExec) {
	dependsOn build
  	classpath = files("build/bpmn-diff-${version}-runner.jar")

  	args './src/test/resources/diffs/dir-diff/a', './src/test/resources/diffs/dir-diff/b'
}

test {
//	jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005'
}

/*
buildNative {
    additionalBuildArgs = [
            '-H:ResourceConfigurationFiles=reflect-config.json'
    ]
}
*/
/*
buildNative {
    additionalBuildArgs = [
            '-H:IncludeResourceBundles=com.sun.org.apache.xerces.internal.impl.msg.XMLMessages'
    ]
}
*/